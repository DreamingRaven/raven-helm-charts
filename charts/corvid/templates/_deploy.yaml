{{- define "corvid.deploy.tpl" -}}
{{- $hasVolume := (or (ne (len .Values.volumes) 0) (or (ne .Values.persistence.existingClaim "") (.Values.persistence.enabled))) }}
{{- $hasOneReplica := (and (eq (int .Values.replicaCount) 1) (not .Values.autoscaling.enabled)) }}
# has volume: {{ $hasVolume }}
# has 1 replica: {{ $hasOneReplica }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "corvid.fullname" . }}
  labels:
    {{- include "corvid.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.deployment.strategy }}
  strategy:
    type: {{ .Values.deployment.strategy }}
  {{- else if and $hasVolume $hasOneReplica }}
  strategy:
    type: "Recreate" # detected a single replica with a volume which would block on rollout if Rollout was used
  {{- end }}
  selector:
    matchLabels:
      {{- include "corvid.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "corvid.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "corvid.podSpec.tpl" . | indent 6 }}
{{- end -}}
{{- define "corvid.deploy" -}}
{{- include "corvid.util.merge" (append . "corvid.deploy.tpl") -}}
{{- end -}}
